user www-data;


# Установим сколько процессов nginx может быть запущенно, нужно установить число 
# в зависимости от того какое колличество ядер есть и на каком колличестве ядер мы хотим запустить процессы nginx
worker_processes auto;

events {
# в worker_connections устанаваливаем сколько соединений может быть одновременно обработанно одним процессом
    worker_connections 1024;
    multi_accept on;
}


http {
# Делаем базовые настроойки для проксирование
# устанаваливаме таймаут для чтения ответа от сервера
    proxy_read_timeout 300s;

    # устанавливаем таймаут на соединение с сервером чтоб неболо слишком долго подключения которео может забить процессы
    proxy_connect_timeout 300s;

    # устанавливаем максимальный раземр для временных файлов котторый например передаются с nginx на webapp чтобы не забить систему мусором
    proxy_max_temp_file_size 1024m;

    # устанавливаем максимальный размер для буфера 
    proxy_buffer_size 512k;

    # Создаем число и размер буферов
    proxy_buffers 256 512k;

    # вклчаем буфферизацию
    proxy_buffering on;

    default_type application/octet-stream;

    # Прописываем форат в котором будут собираться логи
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"'
    # прописываем место где буду храниться логи как и на успешное подклчени так и нет 
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    include /etc/nginx/mime.types;
    # Говорим процессу nginx на каком порте будет прослушивать данный сервер, и пишем по какому URL запросу перенаправлять трафик
    server {
        listen 80;
	server_name _;
	# Говорим nginx что если запрос пришел на корневую папку (http://ip/) то куда перенаправлять запрос
        location / {
		# перенаправляем запрос на сервис webapp на порт 5000
            proxy_pass http://webapp:5000; 

	    # передаем серверу webapp то на какой хост был отправленн запрос чтобы сервер мог понять по какому домену идеть запрос
            proxy_set_header Host $host;

	    # передаем ip того кто отправил запрос на сервер
            proxy_set_header X-Real-IP $remote_addr;

	    # добавляем заголовок чтобы сервер знал с какого proxy пришел запрос 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	    # Передаем на webapp то по какому протаколу мы работает
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

